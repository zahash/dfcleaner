if string column has missing value, fill it with the string "unknown"


if numeric column has binary values then don't change its dtype to category (don't want pd.get_dummies to pick that column)


maybe join the fill_nan_values log table with change_dtype table

maybe make a function to create categorical bins from numerical data

make a new function suggest_col_drop() that combines
too_many_missing() and spot_irrelevant_columns() and
returns a list of column names that are suggested to drop.
It may also return another variable 'meta' that states
the reason why each column was selected

initialize the required test variables inside their respective
methods and not in a huge lump inside the setUp() method.

rearrange the arguments in all functions

drop column if too many missing values

One-hot encode categorical columns

scale and normalize the data in dfcleaner

maybe add train test split functionality

(multi-column method)
to fill nan, predict from a linear regression model where
y is the nan column (column to predict) and x is the column
that is most correlated to y.

(single-column method)
to fill nan, sample from the column
